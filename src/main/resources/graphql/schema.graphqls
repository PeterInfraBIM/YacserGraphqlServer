	# YACSER object types
enum YacserObjectType {
	Function
	Hamburger
	Performance
	PortRealisation
	RealisationModule
	RealisationPort
	Requirement
	SystemInterface
	SystemSlot
	Value
}

	# YACSER data model
type YacserModel {
		# Base URI of the model.
	id: String
		# Optional name of the model.
	name: String
}

	# YACSER object interface.
interface YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
}

	# YACSER Function instance.
type Function implements YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
		# Owner SystemSlot
	owner: SystemSlot
		# Related Requirements
	requirements: [Requirement]
}

	# YACSER Hamburger instance.
type Hamburger implements YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
}

	# YACSER Requirement instance.
type Requirement implements YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
		# Owner SystemSlot
	owner: YacserObject
}

	# YACSER System interface instance.
type SystemInterface implements YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
		# First SystemSlot.
	systemSlot0: SystemSlot
		# Second SystemSlot.
	systemSlot1: SystemSlot
}

	# YACSER System slot instance.
type SystemSlot implements YacserObject {
		# URI of the object instance.
	id: String!
		# Optional name of the object.
	name: String
		# Type of the object instance
	type: YacserObjectType!
		# Specified functions.
	functions: [Function]
		# Related interfaces.
	interfaces: [SystemInterface]
}

	# All queries that are defined for this YACSER graphQL server
type Query {
		# List all loaded models.
	allModels: [YacserModel]
	
		# List all YACSER objects
	allObjects(
			# Base URI of the model.
		modelId: ID!
	): [YacserObject]
	
		# Get Function object by ID.
	function(
			# Function object ID.
		id: ID!
	): Function
	
		# Get Hamburger object by ID.
	hamburger(
			# Hamburger object ID.
		id: ID!
	): Hamburger

		# Get Requirement object by ID.
	requirement(
			# Requirement object ID.
		id: ID!
	): Requirement

		# Get SystemInterface object by ID.
	systemInterface(
			# SystemInterface object ID.
		id: ID!
	): SystemInterface
		
		# Get SystemSlot object by ID.
	systemSlot(
			# SystemSlot object ID.
		id: ID!
	): SystemSlot
	
}

	# Update Function input arguments.
input UpdateFunctionInput {
		# Function ID.
	functionId: ID!
		# If present: new name.
	updateName: String
		# If present: add requirements.
	addRequirements: [ID]
}

	# Update SystemInterface input arguments.
input UpdateSystemInterfaceInput {
		# SystemInterface ID.
	systemInterfaceId: ID!
		# If present: new name.
	updateName: String
		# If present: update SystemSlot 0.
	updateSystemSlot0: ID
		# If present: update SystemSlot 1.
	updateSystemSlot1: ID
}

	# Update SystemSlot input arguments.
input UpdateSystemSlotInput {
		# SystemSlot ID.
	systemSlotId: ID!
		# If present: new name.
	updateName: String
		# If present: add functions.
	addFunctions: [ID]
		# If present: remove functions.
	removeFunctions: [ID]
		# If present: Replace all functions.
	replaceFunctions: [ID]
}

	# All mutations that are defined for this YACSER graphQL server
type Mutation {

		# Create a YACSER model.
	createModel(
			# Base URI of the model.
		modelId: ID!, 
			# Optional name of the model.
		name: String
	): YacserModel
	
		# Create a YACSER object.
	createObject(
			# Base URI of the model.
		modelId: ID!, 
			# Subtype of YACSER object.
		type: YacserObjectType!
			# Optional name of the object.
		name: String
	): YacserObject

		# Update Function object
	updateFunction(
			# Input for Update Function.
		input: UpdateFunctionInput!
	): Function
	
			# Update SystemInterface object
	updateSystemInterface(
			# Input for Update SystemInterface.
		input: UpdateSystemInterfaceInput!
	): SystemInterface
		
		# Update SystemSlot object
	updateSystemSlot(
			# Input for Update SystemSlot.
		input: UpdateSystemSlotInput!
	): SystemSlot
	
		# Save model
	saveModel(
		# Base URI of the model. 
	modelId: ID!,
		# File path
	filePath: String!
	): Boolean
	
		# Load model
	loadModel(
		# File path
	filePath: String!
	): YacserModel
	
}

schema {
  query: Query
  mutation: Mutation
}
